<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/" xmlns:role="http://www.sitecore.net/xmlconfig/role/" xmlns:security="http://www.sitecore.net/xmlconfig/security/">
  <sitecore role:require="Standalone or ContentManagement or XMCloud" security:require="Sitecore">
    <commands>
      <command name="item:executescript" type="Spe.Client.Commands.MenuItems.ExecutePowerShellScript,Spe" />
      <command name="item:contextconsole" type="Spe.Client.Commands.MenuItems.ExecutePowerShellConsole,Spe" />
      <command name="item:scriptlibrary" type="Spe.Client.Commands.MenuItems.ScriptLibraryMenuItem,Spe" />
      <command name="powershell:startmenuaction" type="Spe.Client.Commands.MenuItems.ScriptLibraryMenuItem,Spe" />
      <command name="item:editscript" type="Spe.Client.Commands.MenuItems.EditPowerShellScript,Spe" />
      <command name="ise:save" type="Spe.Client.Commands.RuntimeQueryState,Spe" />
      <command name="ise:saveas" type="Spe.Client.Commands.RuntimeQueryState,Spe" />
      <command name="ise:execute" type="Spe.Client.Commands.RuntimeQueryState,Spe" />
      <command name="ise:executeselection" type="Spe.Client.Commands.RuntimeQueryState,Spe" />
      <command name="ise:open" type="Spe.Client.Commands.RuntimeQueryState,Spe" />
      <command name="ise:new" type="Spe.Client.Commands.RuntimeQueryState,Spe" />
      <command name="ise:run" type="Spe.Client.Commands.RuntimeQueryState,Spe" />
      <command name="ise:abort" type="Spe.Client.Commands.AbortQueryState,Spe" />
      <command name="ise:reload" type="Spe.Client.Commands.ItemDefinedQueryState,Spe" />
      <command name="ise:editsettingsdropdown" type="Spe.Client.Commands.EditIseSettingsCombo,Spe" />
      <command name="ise:pickcontext" type="Spe.Client.Commands.GalleryRuntimeQueryState,Spe" />
      <command name="ise:selectlanguage" type="Spe.Client.Commands.SelectLanguage,Spe" />
      <command name="ise:selectuser" type="Spe.Client.Commands.SelectUser,Spe" />
      <command name="ise:executefieldeditor" type="Spe.Client.Commands.ExecuteFieldEditor, Spe" />
      <command name="ise:editsettings" type="Spe.Client.Commands.EditIseSettings,Spe" />
      <command name="powershell:fieldeditor" type="Spe.Client.Applications.FieldEditor, Spe" />
      <command name="ise:debug" type="Spe.Client.Commands.RuntimeQueryState,Spe" />
      <command name="ise:debugaction" type="Spe.Client.Commands.DebugQueryState,Spe" />
      <command name="ise:immediatewindow" type="Spe.Client.Commands.DebugQueryState,Spe" />
      <command name="ise:iframe" type="Spe.Client.Commands.MenuItems.ShowExternalPage" />
      <command name="pslvnav:first" type="Spe.Client.Commands.ListViewPagingQueryState,Spe" />
      <command name="pslvnav:last" type="Spe.Client.Commands.ListViewPagingQueryState,Spe" />
      <command name="pslvnav:previous" type="Spe.Client.Commands.ListViewPagingQueryState,Spe" />
      <command name="pslvnav:next" type="Spe.Client.Commands.ListViewPagingQueryState,Spe" />
      <command name="pslv:filter" type="Spe.Client.Commands.ListViewFilterQueryState,Spe" />
      <command name="webedit:script" type="Spe.Client.Commands.WebEditScriptCommand,Spe" />
      <command name="item:elevatescriptedit" type="Spe.Core.Settings.Authorization.ElevateSessionState,Spe" />
      <command name="item:dropelevatescriptedit" type="Spe.Core.Settings.Authorization.DropElevatedSessionState,Spe" />
    </commands>
    <typeMappings>
      <mapping name="IUrlHandleWrapper" type="Spe.Utility.UrlHandleWrapper, Spe" />
      <mapping name="IDateConverter" type="Spe.Utility.DateConverter, Spe" />
      <mapping name="IImmediateDebugWindowLauncher" type="Spe.Client.Applications.ImmediateDebugWindowLauncher, Spe" />
      <mapping name="ISessionElevationWindowLauncher" type="Spe.Client.Applications.SessionElevationWindowLauncher, Spe" />
      <mapping name="IJobOptions" type="Spe.VersionSpecific.Services.SpeJobOptions, Spe.VersionSpecific" />
      <mapping name="IJobManager" type="Spe.VersionSpecific.Services.SpeJobManager, Spe.VersionSpecific" />
      <mapping name="IJob" type="Spe.VersionSpecific.Services.SpeJob, Spe.VersionSpecific" />
      <mapping name="IJobMessageManager" type="Spe.VersionSpecific.Services.SpeJobMessageManager, Spe.VersionSpecific" />
      <mapping name="IAuthenticationManager" type="Spe.VersionSpecific.Services.SpeAuthenticationManager, Spe.VersionSpecific" />
      <mapping name="IObsoletor" type="Spe.VersionSpecific.Services.SpeObsoletor, Spe.VersionSpecific" />
      <mapping name="IPublishManager" type="Spe.VersionSpecific.Services.SpePublishManager, Spe.VersionSpecific" />
      <mapping name="IIndexManager" type="Spe.VersionSpecific.Services.SpeIndexManager, Spe.VersionSpecific" />
    </typeMappings>
    <settings>
      <setting name="Spe.CommandWaitMillis" value="25" />
      <setting name="Spe.InitialPollMillis" value="100" />
      <setting name="Spe.MaxmimumPollMillis" value="2500" />
      <setting name="Spe.PersistentSessionExpirationMinutes" value="30" />
      <setting name="Spe.PreventPersistentSessionCleanup" value="false" />
      <setting name="Spe.HttpCacheExpirationMinutes" value="20" />
      <setting name="Spe.SerializationSizeBuffer" value="5KB" />
      <setting name="Spe.VariableDetails.MaxArrayParseSize" value="20" />
      <setting name="Spe.AuthorizationCacheExpirationSecs" value="10" />
      <setting name="Spe.WebApiCacheExpirationSecs" value="30" />
      <setting name="Spe.OutputLoggingEnabled" value="false" />
    </settings>
    <ui>
      <references>
        <reference id="powershell">/bin/Spe.dll</reference>
      </references>
    </ui>
    <controlSources>
      <source mode="on" namespace="Spe.Client.Controls" assembly="Spe" />
      <source mode="on" namespace="Spe.Client.Applications" folder="/sitecore modules/Shell/PowerShell/" deep="true" />
    </controlSources>
    <powershell>
      <workingDatabase>
        <scriptLibrary>master</scriptLibrary>
        <settings>master</settings>
        <rules>master</rules>
      </workingDatabase>
      <integrationPoints>
        <pageEditorExperienceButton name="Page Editor - Experience Button" creationScript="{2C8F2F97-48A5-4D61-9ACE-02F514418860}">Page Editor/Experience Button</pageEditorExperienceButton>
        <contentEditorContextMenu name="Content Editor - Context Menu" creationScript="{3F4D58B4-D799-4764-A1BC-50AF8ACA6C9D}">Content Editor/Context Menu</contentEditorContextMenu>
        <contentEditorInsertItem name="Content Editor - Insert Item" creationScript="{24A7B2BD-82D8-414B-8088-9135C7F49499}">Content Editor/Insert Item</contentEditorInsertItem>
        <contentEditorGutters name="Content Editor - Gutter" creationScript="{7705A482-62CE-4170-8EE7-1E735FAC9FF4}">Content Editor/Gutters</contentEditorGutters>
        <contentEditorContextualRibbon name="Content Editor - Contextual Ribbon" creationScript="{BFD0DE96-7E1E-46D7-B252-D8A0D35F0858}">Content Editor/Contextual Ribbon</contentEditorContextualRibbon>
        <contentEditorRibbon name="Content Editor - Ribbon" creationScript="{CF286A94-A2D9-43EC-B530-035FB87CB144}">Content Editor/Ribbon</contentEditorRibbon>
        <contentEditorWarning name="Content Editor - Warning" creationScript="{DC9E0DB0-2B8F-44E7-A68A-AB484C80053C}">Content Editor/Warning</contentEditorWarning>
        <controlPanel name="Control Panel" creationScript="{CFCE30B7-A8BA-4ABE-BC09-F09734576A5B}">Control Panel</controlPanel>
        <functions name="Shared Functions" creationScript="{FB5D13E5-47BA-4EAE-BB7A-BE32737CC55C}">Functions</functions>
        <pageEditorNotification name="Page Editor - Notifications" creationScript="{01543B62-5AF3-48B5-AC6A-F45904C359B8}">Page Editor/Notification</pageEditorNotification>
        <pipelineLoggedIn name="Pipeline - Logged In" creationScript="{356FFE92-06B1-4F1F-B582-647A8BA8143E}">Pipelines/LoggedIn</pipelineLoggedIn>
        <pipelineLoggingIn name="Pipeline - Logging In" creationScript="{9A210D76-F5B8-4645-97DB-33518DF9C42B}">Pipelines/LoggingIn</pipelineLoggingIn>
        <pipelineLogout name="Pipeline - Logout" creationScript="{C0AD38B7-2846-408B-B2A1-9EDBB8662080}">Pipelines/Logout</pipelineLogout>
        <reportStartMenu name="Report - Start Menu" creationScript="{F1D2D408-3D8D-4CAA-9DDE-8675F24ABBF6}">Reports</reportStartMenu>
        <reportAction name="Report - Actions" creationScript="{E6A973EC-0023-41FA-AF4C-17E314C7D470}">Internal/List View/Ribbon</reportAction>
        <reportExport name="Report - Exports" creationScript="{9ECE97F0-F6EE-43AF-86F5-51C07D6814CC}">Internal/List View/Export</reportExport>
        <toolbox name="Toolbox" creationScript="{3BEAED5C-B58A-4000-B4FF-D925654E3AF2}">Toolbox</toolbox>
        <eventHandlers name="Event Handlers" creationScript="{4DFBE0BE-90F2-4842-99ED-D32A5E35E1D6}">Event Handlers</eventHandlers>
        <webAPI name="Web API" creationScript="{342C49A9-8EEB-43F0-9BB7-F2DEE7484E93}">Web API</webAPI>
        <isePlugin name="ISE Plugins" creationScript="{B1EAADF1-D441-491F-A333-98564D913EB8}">Internal/ISE Plugins</isePlugin>
        <tasks name="Tasks" creationScript="{ECE72C4F-F6EB-470C-AEEE-9E9544291CDF}">Tasks</tasks>
      </integrationPoints>
	<!-- In some scenarious trying to set 'requireSecureConnection' to true will not work as you expect
		    because the load balancer does not maintain https traffic all the way to IIS. -->
	<services>
        <restfulv1 enabled="false" requireSecureConnection="false">
          <authorization>
            <add Permission="Allow" IdentityType="Role" Identity="sitecore\PowerShell Extensions Remoting" />
            <!-- Uncomment to enable anonymous users to access restful apis from the "web" database -->
            <!--add Permission="Allow" IdentityType="User" Identity="extranet\Anonymous" /-->
            <add Permission="Allow" IdentityType="User" Identity="sitecore\admin" />
          </authorization>
        </restfulv1>
        <restfulv2 enabled="false" requireSecureConnection="false">
          <authorization>
            <add Permission="Allow" IdentityType="Role" Identity="sitecore\PowerShell Extensions Remoting" />
            <!-- Uncomment to enable anonymous users to access restful apis from the "web" database -->
            <!--add Permission="Allow" IdentityType="User" Identity="extranet\Anonymous" /-->
            <add Permission="Allow" IdentityType="User" Identity="sitecore\admin" />
          </authorization>
        </restfulv2>
        <remoting enabled="false" requireSecureConnection="false">
          <authorization>
			<!-- The disabled user sitecore\PowerShellExtensionsAPI is included for use with the follwing role -->
            <add Permission="Allow" IdentityType="Role" Identity="sitecore\PowerShell Extensions Remoting" />
            <!-- example to disable specific user from an endpoint: -->
            <!--add Permission="Deny" IdentityType="User" Identity="sitecore\admin" /-->
          </authorization>
        </remoting>
        <fileDownload enabled="false" requireSecureConnection="false">
          <authorization>
            <add Permission="Allow" IdentityType="Role" Identity="sitecore\PowerShell Extensions Remoting" />
            <add Permission="Allow" IdentityType="Role" Identity="sitecore\Developer" />
            <add Permission="Allow" IdentityType="Role" Identity="sitecore\IsAdministrator" />
          </authorization>
        </fileDownload>
        <fileUpload enabled="false" requireSecureConnection="false">
          <authorization>
            <add Permission="Allow" IdentityType="Role" Identity="sitecore\PowerShell Extensions Remoting" />
            <add Permission="Allow" IdentityType="Role" Identity="sitecore\Developer" />
            <add Permission="Allow" IdentityType="Role" Identity="sitecore\IsAdministrator" />
          </authorization>
        </fileUpload>
        <mediaDownload enabled="false" requireSecureConnection="false">
          <authorization>
            <add Permission="Allow" IdentityType="Role" Identity="sitecore\PowerShell Extensions Remoting" />
            <add Permission="Allow" IdentityType="Role" Identity="sitecore\Developer" />
            <add Permission="Allow" IdentityType="Role" Identity="sitecore\IsAdministrator" />
          </authorization>
        </mediaDownload>
        <mediaUpload enabled="false" requireSecureConnection="false">
          <authorization>
            <add Permission="Allow" IdentityType="Role" Identity="sitecore\PowerShell Extensions Remoting" />
            <add Permission="Allow" IdentityType="Role" Identity="sitecore\Developer" />
            <add Permission="Allow" IdentityType="Role" Identity="sitecore\IsAdministrator" />
          </authorization>
        </mediaUpload>
        <handleDownload enabled="true" requireSecureConnection="false">
          <authorization>
            <add Permission="Allow" IdentityType="Role" Identity="sitecore\PowerShell Extensions Remoting" />
            <add Permission="Allow" IdentityType="Role" Identity="sitecore\Sitecore Client Users" />
            <add Permission="Allow" IdentityType="Role" Identity="sitecore\IsAdministrator" />
          </authorization>
        </handleDownload>
        <client enabled="true" requireSecureConnection="false">
          <authorization>
            <add Permission="Allow" IdentityType="Role" Identity="sitecore\Developer" />
            <!-- "Magic" role that catches all users in Sitecore with Administrator privileges -->
            <add Permission="Allow" IdentityType="Role" Identity="sitecore\IsAdministrator" />
          </authorization>
        </client>
        <execution enabled="true" requireSecureConnection="false">
          <authorization>
            <add Permission="Allow" IdentityType="Role" Identity="sitecore\Sitecore Client Users" />
            <!-- "Magic" role that catches all users in Sitecore with Administrator privileges -->
            <add Permission="Allow" IdentityType="Role" Identity="sitecore\IsAdministrator" />
          </authorization>
        </execution>
      </services>
      <authenticationProvider type="Spe.Core.Settings.Authorization.SharedSecretAuthenticationProvider, Spe">
        <!--<sharedSecret></sharedSecret> Uncomment this line and provide a strong randomized shared secret here. At least 64 characters is recommended, for example https://www.grc.com/passwords.htm -->
        <allowedIssuers hint="list">
          <issuer>SPE Remoting</issuer>
          <issuer>Web API</issuer>
        </allowedIssuers>
        <!-- Uncomment this section if you wish to allow for audiences in addition to the current authority, for example https://someotherurl
            If the traffic is not using https all the way to IIS you may need to add the additional version here.
		-->
		<!--
		<allowedAudiences hint="list">
          <audience>https://someotherurl</audience>
        </allowedAudiences>
        -->
        <detailedAuthenticationErrors>false</detailedAuthenticationErrors>
      </authenticationProvider>
      <userAccountControl>
        <gates>
          <!--
            Gates into the system
              Ways ARBITRARY (not already saved/existing in the system) scripts might make into the system without explicitly providing password during the execution or save.
              Those gates require that the user session needs to be elevated with a proper token.
              Tokens are defined in the sestion below. Once Gate is elevated with a token it can do its job until token is dropped or expires.
            -->
          <gate name="Console" token="Console"/>
          <gate name="ISE" token="ISE"/>
          <gate name="ItemSave" token="ItemSave"/>
        </gates>
        <tokens>
          <!-- 
            Tokens provide means of elevation of the user session. Token can be used by one or more gates. 
            E.g. You can use the same token for all gates.
              elevationAction
                Token elavation actions:
                  - Block - Always block action
                  - Password - Ask for Password to elevate session
                  - Confirm - Ask for confirmation to elevate the session
                  - Allow - Always allow to elevate session without asking
              expiration
                TimeSpan serialized for how long session should stay elevated.
            -->
          <token name="Default" expiration="00:00:00" elevationAction="Block"/>
          <token name="Console" expiration="00:05:00" elevationAction="Password"/>
          <token name="ISE" expiration="00:05:00" elevationAction="Password"/>
          <token name="ItemSave" expiration="00:05:00" elevationAction="Password"/>
        </tokens>
      </userAccountControl>
      <commandlets>
        <add Name="Built-in Commandlets" type="*, Spe" />
      </commandlets>
      <translation>
        <ignoredFields>
          <field>__Archive date</field>
          <field>__Archive Version date</field>
          <field>__Lock</field>
          <field>__Owner</field>
          <field>__Page Level Test Set Definition</field>
          <field>__Reminder date</field>
          <field>__Reminder recipients</field>
          <field>__Reminder text</field>
          <!--field>__Security</field-->
        </ignoredFields>
      </translation>
    </powershell>
    <pipelines>
      <initialize>
        <processor type="Spe.Integrations.Pipelines.AssemblyResolver, Spe"/>
      </initialize>
      <!-- Disabled due to incompatibility with a newer version of Sitecore. -->
      <!--<getChromeData>
        <processor type="Spe.Integrations.Pipelines.PageEditorExperienceButtonScript, Spe"/>
      </getChromeData>-->
      <getContentEditorWarnings>
        <processor patch:before="processor[@type='Sitecore.Pipelines.GetContentEditorWarnings.RunRules, Sitecore.Kernel']"
           type="Spe.Integrations.Pipelines.ContentEditorWarningScript, Spe" />
        <processor patch:before="processor[@type='Sitecore.Pipelines.GetContentEditorWarnings.RunRules, Sitecore.Kernel']"
           type="Spe.Core.Settings.Authorization.ContentEditorSecurityWarning, Spe" />
      </getContentEditorWarnings>
      <!-- for Sitecore 9 -->
      <group groupName="ExperienceEditor" name="ExperienceEditor">
        <pipelines>
          <getPageEditorNotifications>
            <processor type="Spe.Integrations.Pipelines.PageEditorNotificationScript, Spe"/>
          </getPageEditorNotifications>
        </pipelines>
      </group>
      <!-- for Sitecore 8.2 -->
      <getPageEditorNotifications>
        <processor type="Spe.Integrations.Pipelines.PageEditorNotificationScript, Spe"/>
      </getPageEditorNotifications>
      <getLookupSourceItems>
        <processor
          patch:before="*[@type='Sitecore.Pipelines.GetLookupSourceItems.ProcessQuerySource, Sitecore.Kernel']"
          type="Spe.Integrations.Processors.ScriptedDataSource, Spe" />
      </getLookupSourceItems>
      <mvc.renderRendering>
        <processor type="Spe.Integrations.Processors.ScriptedRenderRendering, Spe"
                   patch:after="*[@type='Sitecore.Mvc.Pipelines.Response.RenderRendering.EnterRenderingContext, Sitecore.Mvc']"/>
      </mvc.renderRendering>
      <getRenderingDatasource>
        <processor
          patch:before="*[@type='Sitecore.Pipelines.GetRenderingDatasource.GetDatasourceLocation, Sitecore.Kernel']"
          type="Spe.Integrations.Processors.ScriptedRenderingDataSourceRoots, Spe" />
      </getRenderingDatasource>
      <resolveRenderingDatasource>
        <processor
          type="Spe.Integrations.Processors.ScriptedRenderingDataSourceResolve, Spe" />
      </resolveRenderingDatasource>
      <preprocessRequest>
        <processor type="Spe.Core.Processors.RewriteUrl, Spe"
                   patch:before="processor[@type='Sitecore.Pipelines.PreprocessRequest.CheckIgnoreFlag, Sitecore.Kernel']" />
      </preprocessRequest>
      <expandInitialFieldValue>
        <processor patch:before="*[@type='Sitecore.Pipelines.ExpandInitialFieldValue.ReplaceVariables, Sitecore.Kernel']" type="Spe.Integrations.Processors.SkipPowerShellScriptItems, Spe" />
      </expandInitialFieldValue>
    </pipelines>
    <processors>
      <loggingin argsType="Sitecore.Integrations.Pipelines.LoggingIn.LoggingInArgs">
        <!-- Pipeline to run scripts while the user is logging in. -->
        <processor patch:after="processor[position()=last()]" mode="on"
                   type="Spe.Integrations.Pipelines.LoggingInScript, Spe" />
      </loggingin>
      <loggedin argsType="Sitecore.Pipelines.LoggedIn.LoggedInArgs">
        <!-- Pipeline to run scripts after the user is logged in. -->
        <processor patch:after="processor[position()=last()]" mode="on"
                   type="Spe.Integrations.Pipelines.LoggedInScript, Spe" />
      </loggedin>
      <logout argsType="Sitecore.Pipelines.Logout.LogoutArgs">
        <!-- Pipeline to run scripts when the user logs out. -->
        <processor patch:after="*[@type='Sitecore.Pipelines.Logout.CheckModified, Sitecore.Kernel']" mode="on"
                   type="Spe.Integrations.Pipelines.LogoutScript, Spe" />
      </logout>
    </processors>
    <events>
      <event name="item:saved">
        <handler type="Spe.Core.Modules.ModuleMonitor, Spe" method="OnItemSaved" />
        <handler type="Spe.Core.Extensions.ItemShellExtensions, Spe" method="TemplateFieldsInvalidateCheck" />
      </event>
      <event name="item:saved:remote">
        <handler type="Spe.Core.Modules.ModuleMonitor, Spe" method="OnItemSavedRemote" />
        <handler type="Spe.Core.Extensions.ItemShellExtensions, Spe" method="TemplateFieldsInvalidateCheckRemote" />
      </event>
      <event name="item:saving">
        <handler type="Spe.Core.Modules.ModuleMonitor, Spe" method="OnItemSaving" />
        <handler type="Spe.Core.Settings.Authorization.ScriptItemSecurityEventHandler, Spe" method="OnEvent" />
      </event>
      <event name="item:creating">
        <handler type="Spe.Core.Settings.Authorization.ScriptItemSecurityEventHandler, Spe" method="OnEvent" />
      </event>
    </events>
    <log4net>
      <appender name="PowerShellExtensionsFileAppender" type="log4net.Appender.SitecoreLogFileAppender, Sitecore.Logging">
        <file value="$(dataFolder)/logs/SPE.log.{date}.txt"/>
        <appendToFile value="true"/>
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%4t %d{ABSOLUTE} %-5p %m%n"/>
        </layout>
        <encoding value="utf-8"/>
      </appender>
      <logger name="Spe" additivity="false">
        <!-- Loggers may be assigned levels. Levels are instances of the log4net.Core.Level class. The following levels are defined in order of increasing priority:
             ALL > DEBUG > INFO > WARN > ERROR > FATAL > OFF
             Change the value below to DEBUG to log the scripts as they are executed.
         -->
        <level value="INFO"/>
        <appender-ref ref="PowerShellExtensionsFileAppender"/>
      </logger>
    </log4net>
  </sitecore>
</configuration>
