----item----
version: 1
id: {785CB68F-0999-4543-A5E1-AFED0C152A17}
database: master
path: /sitecore/system/Modules/PowerShell/Script Library/Platform/Development/Integration points/Create Integration Points
parent: {5398F7EA-3ECB-4C84-946E-49C63ECD8DCD}
name: Create Integration Points
master: {00000000-0000-0000-0000-000000000000}
template: {DD22F1B3-BD87-4DB2-9E7D-F7A496888D43}
templatekey: PowerShell Script
created: 20160914T194856:636094793364070000

----field----
field: {B1A94FF0-6897-47C0-9C51-AA6ACB80B1F0}
name: Script
key: script
content-length: 2484

$integrationPoints = [Cognifide.PowerShell.Core.Modules.IntegrationPoints]::Libraries;
Import-Function -Name Create-IntegrationPoint
$options = New-Object System.Collections.Specialized.OrderedDictionary
$moduleRootPath = (Get-Item .).ProviderPath

if($moduleRootPath.TemplateId -ne "{B6A55AC6-A602-4C09-AC3A-1D2938621D5B}" ){
    $moduleRootPath = "master:\system\Modules\PowerShell\Script Library"
}

$integrationPoints.Values | % { $options.Add($_.Name, $_.Id) }

if($module -eq $null){
    $moduleEnabled = $true;
    $result = Read-Variable -Parameters `
        @{ Name = "moduleName"; Title="Name of the module"; Root="/sitecore/system/Modules/PowerShell/Script Library" },
        @{ Name = "moduleEnabled"; Title="Enable module" },
        @{ Name = "pointsToCreate"; Title="Integration points to create"; Options=$options; Editor="checklist"; Tip="Select the integration points for which the Script Libraries should be created."; Height="330px"} `
        -Description "Pick the settings for the module that you will be creating and the integration points to include in it." `
        -Title "Create a new module" -Width 500 -Height 630 -OkButtonName "Proceed" -CancelButtonName "Abort" -ShowHints

    if($result -ne "ok")
    {
        Exit
    }
    
    $moduleitem = New-Item -Path $moduleRootPath -ItemType "Modules/PowerShell Console/PowerShell Script Module" -Name "$moduleName"
    if($moduleitem -eq $null){
        Show-Alert "$error"
        Exit
    }
    Set-Variable -Name "module" -Scope Global -Value $moduleitem
    if($moduleEnabled){    
        $moduleitem.Enabled = "1";
    }
}
else{
    $result = Read-Variable -Parameters `
        @{ Name = "pointsToCreate"; Title="Integration points to create"; Options=$options; Editor="checklist"; Tip="Select the integration points for which the Script Libraries should be created."} `
        -Description "Pick the integration points you want to create Script libraries for. When you press OK all required script libraries for selected integration points will be created." `
        -Title "Pick a module to populate" -Width 500 -Height 600 -OkButtonName "Proceed" -CancelButtonName "Abort" -ShowHints
    if($result -ne "ok")
    {
        Exit
    }
}

cd "$([Cognifide.PowerShell.Core.Settings.ApplicationSettings]::ScriptLibraryDb):\"
foreach($pointToCreate in $pointsToCreate){
    Execute-Script -Path $integrationPoints[$pointToCreate].CreationScript
}
----version----
language: en
version: 1
revision: d47e64f5-c480-4d53-a6bf-447cb8da6abd

----field----
field: {25BED78C-4957-4165-998A-CA1B52F67497}
name: __Created
key: __created
content-length: 15

20141203T021327
----field----
field: {8CDC337E-A112-42FB-BBB4-4143751E123F}
name: __Revision
key: __revision
content-length: 36

d47e64f5-c480-4d53-a6bf-447cb8da6abd
----field----
field: {D9CF14B1-FA16-4BA6-9288-E8A174D4D522}
name: __Updated
key: __updated
content-length: 16

20160914T202328Z
----field----
field: {BADD9CF9-53E0-4D0C-BCC0-2D784C282F6A}
name: __Updated by
key: __updated by
content-length: 14

sitecore\admin
