---
ID: "33aa183d-7b0b-43c3-9833-4d530d49ced8"
Parent: "e96411fe-97f1-47ac-80e3-9315593e7feb"
Template: "dd22f1b3-bd87-4db2-9e7d-f7a496888d43"
Path: /sitecore/system/Modules/PowerShell/Script Library/SPE/Maintenance/System Maintenance/Tasks/Clean up database tables
DB: master
SharedFields:
- ID: "06d5295c-ed2f-4a54-9bf2-26228d113318"
  Hint: __Icon
  Value: office/32x32/data.png
- ID: "b1a94ff0-6897-47c0-9c51-aa6acb80b1f0"
  Hint: Script
  Value: |
    # Clean up the History, EventQueue, and PublishQueue tables.
    
    $sql = @"
    USE [{0}]
    /* TRUNCATE History TABLE */
    IF OBJECT_ID('History', 'U') IS NOT NULL
    IF((SELECT COUNT(*) FROM [History]) > 1000)
    BEGIN
        TRUNCATE TABLE [History];
    END
    
    /* TRUNCATE EventQueue TABLE */
    IF OBJECT_ID('EventQueue', 'U') IS NOT NULL
    IF((SELECT COUNT(*) FROM [EventQueue]) > 1000)
    BEGIN
        TRUNCATE TABLE [EventQueue];
    END
    
    /* TRUNCATE PublishQueue TABLE */
    IF OBJECT_ID('PublishQueue', 'U') IS NOT NULL
    IF((SELECT COUNT(*) FROM [PublishQueue]) > 1000)
    BEGIN
        TRUNCATE TABLE [PublishQueue];
    END
    "@
    
    Import-Function Invoke-SqlCommand
    
    foreach($db in Get-Database | Where-Object {"filesystem" -notcontains $_ }) {
        Write-Verbose "Cleaning up the History, EventQueue, and PublishQueue tables in the $($db.Name) database."
        $connection = [Sitecore.Configuration.Settings]::GetConnectionString($db.Name)
        $builder = New-Object System.Data.SqlClient.SqlConnectionStringBuilder $connection
        $dbName = $builder.InitialCatalog
        $query = [string]::Format($sql, $dbName)
        
        Invoke-SqlCommand -Connection $connection -Query $query | Select-Object -Property *,@{n="Database";e={$dbName}}
    }
Languages:
- Language: en
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20150703T060835
