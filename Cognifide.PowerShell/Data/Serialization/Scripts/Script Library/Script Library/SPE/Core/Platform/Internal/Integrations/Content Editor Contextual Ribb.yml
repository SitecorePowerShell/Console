---
ID: "92d22dfc-d376-4716-8359-bf9a91f2fac4"
Parent: "9be73650-a188-4802-a68e-e720db54c5e9"
Template: "dd22f1b3-bd87-4db2-9e7d-f7a496888d43"
Path: /sitecore/system/Modules/PowerShell/Script Library/SPE/Core/Platform/Internal/Integrations/Content Editor Contextual Ribbon
DB: master
SharedFields:
- ID: "06d5295c-ed2f-4a54-9bf2-26228d113318"
  Hint: __Icon
  Value: Office/32x32/tab_pane.png
- ID: "1c76313e-3c8c-4807-a826-135d10c39299"
  Hint: ShowRule
  Type: Rules
  Value: <ruleset />
- ID: "b1a94ff0-6897-47c0-9c51-aa6acb80b1f0"
  Hint: Script
  Value: |
    $ribbonRoot = "core:\content\Applications\Content Editor\Ribbons\Contextual Ribbons"
    
    $roots = Get-SpeModuleFeatureRoot "ContentEditorContextualRibbon"
    
    Write-Host "- Purging Content Editor Contextual Ribbon entries for non existing scripts and disabled modules" -ForegroundColor Cyan
    Write-Progress -Activity "Content Editor Contextual Ribbon" -CurrentOperation "Removing buttons for deleted scripts"
    $toolbars = Get-ChildItem -Path $ribbonRoot | Where-Object { $_.TemplateName -eq "Toolbar" }
    foreach($toolbar in $toolbars) {
        $strips = Get-ChildItem -Path $toolbar.ProviderPath | Where-Object { $_.TemplateName -eq "Strip" }
        foreach($strip in $strips) {
            $chunks = Get-ChildItem -Path $strip.ProviderPath | Where-Object { $_.TemplateName -eq "Chunk" }
            foreach($chunk in $chunks) {
                $panels = Get-ChildItem -Path $chunk.ProviderPath | Where-Object { $_.TemplateName -eq "Panel" -and $_.Type -like "*Cognifide.PowerShell.Client.Controls.ContentEditorRibbonPanel*" }
                foreach($panel in $panels) {
                    $panel | Remove-Item -Recurse
                }
                
                if ($chunk.Children.Count -eq 0) {
            		Write-Host " - Removing Chunk '$($chunk.Name)' from strip '$($strip.Name)'" -f y
            		$chunk | Remove-Item
            	}
            }
    		
    	    if ($strip.Children.Count -eq 0) {
        		Write-Host " - Removing Strip '$($strip.Name)'" -f y
        		$strip | Remove-Item
        	}
        }
        
        if ($toolbar.Children.Count -eq 0) {
    		Write-Host " - Removing Strip '$($toolbar.Name)'" -f y
    		$toolbar | Remove-Item
    	}
    }
    
    # Re-creating buttons
    Write-Host "- Adding Content Editor Contextual Ribbon entries for new scripts and modules" -ForegroundColor Cyan
    Write-Progress -Activity "Content Editor Contextual Ribbon" -CurrentOperation "Adding buttons for new scripts" -PercentComplete 50
    
    foreach ($root in $roots) {
    	$scriptLibPath = "$($root.Database.Name):$($root.Paths.Path)"
    	
    	$toolbarLibraries = Get-ChildItem -Path $scriptLibPath | Where-Object { $_.TemplateName -eq "PowerShell Script Library" }
    	foreach($toolbarLibrary in $toolbarLibraries) {
    	    $toolbar = Get-Item -Path "$($ribbonRoot)/$($toolbarLibrary.Name)" -ErrorAction SilentlyContinue
    	    if ($toolbar -eq $null) {
    			Write-Host " - Adding Toolbar '$($toolbarLibrary.Name)'." -f Green
    			$toolbar = New-Item -Path $ribbonRoot -Name $toolbarLibrary.Name -ItemType "System/Ribbon/Toolbar"
    			$toolbar."Sticky Chunk" = "{42F1FD88-20E3-42BD-9217-A9468F115928}"
    		}
    		
    		$stripLibraries = Get-ChildItem -Path $toolbarLibrary.ProviderPath | Where-Object { $_.TemplateName -eq "PowerShell Script Library" }
    		foreach($stripLibrary in $stripLibraries) {
    		    $strip = Get-Item -Path "$($ribbonRoot)/$($toolbarLibrary.Name)/$($stripLibrary.Name)" -ErrorAction SilentlyContinue
        		if ($strip -eq $null) {
        			Write-Host " - Adding Strip '$($stripLibrary.Name)'." -f Green
        			$strip = New-Item -Path "core:" -Parent $toolbar -Name $stripLibrary.Name -ItemType "System/Ribbon/Strip"
        			$strip.Header = $stripLibrary.Name
        		}
        		
        		$chunkLibraries = Get-ChildItem -Path $stripLibrary.ProviderPath | Where-Object { $_.TemplateName -eq "PowerShell Script Library" }
        		foreach($chunkLibrary in $chunkLibraries) {
            		$chunk = Get-Item -Path "$($ribbonRoot)/$($toolbarLibrary.Name)/$($stripLibrary.Name)/$($chunkLibrary.Name)" -ErrorAction SilentlyContinue
        			if ($chunk -eq $null) {
        				Write-Host " - Adding Chunk '$($chunkLibrary.Name)'." -f Green
        				$chunk = New-Item -Path "core:" -Parent $strip -Name $chunkLibrary.Name -ItemType "System/Ribbon/Chunk"
        				$chunk.Header = $chunkLibrary.Name
        			}
        			
        			if ($chunk.TemplateName -eq "Reference") {
        				$chunk = Get-Item "core:/" -Id $chunk.Reference
        				Write-Verbose " - Translating reference '$stripsPath/$($scriptLibrary.Name)/$($chunkLibrary.Name)' -> $($chunk.ProviderPath)" #-ForegroundColor Blue
        			} else {
        				Write-Verbose " - Using chunk directly '$($chunk.ProviderPath)'" #-ForegroundColor Blue
        			}
        
        			$panel = $null;
        			$smallCount = 0
        			
        			$scripts = Get-ChildItem -Path $chunkLibrary.ProviderPath
        			foreach($script in $scripts) {
        			    if ($script.TemplateName -eq "PowerShell Script" -or $script.TemplateName -eq "PowerShell Script Library") {
        
        					$name = $script.Name;
        					$buttonTemplate = ""
        					$isSmall = $false;
        
        					if ($script.Name.Contains("$")) {
        						$nameTypeArray = $script.Name.Split('$')
        						$name = $nameTypeArray[1].Trim();
        						$buttonTemplate = $nameTypeArray[0].Trim();
        					}
        					$isSmall = $buttonTemplate -like "*Small*"
        					$isCombo = $buttonTemplate -like "*Combo*" -or $script.HasChildren
        
        					$buttonTemplate = "System/Ribbon/"
        					if($isSmall){
        					    $buttonTemplate += "Small "
        					} else {
                                $buttonTemplate += "Large "
        					}
        					
        					if($isCombo){
        					    $buttonTemplate += "Menu Combo Button"
        					} else {
                                $buttonTemplate += "Button"
        					}
        
        					if (!$panel -or (($smallCount % 2) -eq 1 -and !$isSmall)) {
        						$panel = New-Item -Path "core:" -Parent $chunk -Name $name -ItemType "System/Ribbon/Panel"
        						$panel.Type = "Cognifide.PowerShell.Client.Controls.ContentEditorRibbonPanel,Cognifide.PowerShell"
        						$panel.__Sortorder = $script.__Sortorder
        						$smallCount = 0
        						Write-Host " - Adding Panel '$($panel.Name)' to Chunk '$($chunk.Name)'." -f Green
        					}
        					$button = New-Item -Path "core:" -Name $name -Parent $panel -ItemType $buttonTemplate
        					Write-Host " - Adding Script '$($script.Name)' to Chunk '$($chunk.Name)'." -f Green
        
        					$button.__Icon = $script.__Icon;
        					$button.Icon = $script.__Icon;
        					$button.Header = $name;
        					$button.__Sortorder = $script.__Sortorder;
        					if (Get-Member -InputObject $button -Name "Click" -MemberType Properties) {
        						$button.Click = "item:executescript(id=`$ItemID,script=$($script.ID),scriptDb=$($script.Database.Name))"
        					}
        					if (Get-Member -InputObject $button -Name "Command" -MemberType Properties) {
        						$button.Command = "item:executescript(id=`$ItemID,script=$($script.ID),scriptDb=$($script.Database.Name))"
        					}
        
        					#build menu
        					if ($isCombo) {
        						$button.Menu = $button.Paths.Path
        						Get-ChildItem $script.ProviderPath | % {
        							$itemScript = $_
        							$menuItem = New-Item -Path "core:" -Parent $button -Name $itemScript.Name -ItemType 'System/Menus/Menu item'
        							Write-Host " - Adding Menu Item Script '$($menuItem.Name)' to Dropdown Button '$($button.Name)'." -f Green
        
        							$menuItem.__Icon = $itemScript.__Icon;
        							$menuItem.Icon = $itemScript.__Icon;
        							$menuItem."Display name" = $itemScript.Name;
        							$menuItem.__Sortorder = $itemScript.__Sortorder;
        							$menuItem.Message = "item:executescript(id=`$ItemID,script=$($itemScript.ID),scriptDb=$($itemScript.Database.Name))"
        
        						}
        					}
        					if ($isSmall) {
        						$smallCount++
        					}
        				}
        			}
        		}
    		}
    	}
    }
    
    Write-Progress -Activity "Content Editor Ribbon" -CurrentOperation "Finishing up" -PercentComplete 100
    
- ID: "f62c67b4-28b6-4a6f-91cb-db78cf054f4e"
  Hint: EnableRule
  Type: Rules
  Value: <ruleset />
Languages:
- Language: en
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20131001T173321
