---
ID: "784b270d-91cf-4dc4-890c-d0c1b18c1189"
Parent: "9be73650-a188-4802-a68e-e720db54c5e9"
Template: "dd22f1b3-bd87-4db2-9e7d-f7a496888d43"
Path: /sitecore/system/Modules/PowerShell/Script Library/SPE/Core/Platform/Internal/Integrations/Content Editor Gutter
DB: master
SharedFields:
- ID: "06d5295c-ed2f-4a54-9bf2-26228d113318"
  Hint: __Icon
  Value: Office/32x32/elements_tree.png
- ID: "b1a94ff0-6897-47c0-9c51-aa6acb80b1f0"
  Hint: Script
  Value: |
    $gutterPath = "core:/sitecore/content/Applications/Content Editor/Gutters/"
    $gutterHandlerClass = "Cognifide.PowerShell.Integrations.Gutters.GutterStatusRenderer, Cognifide.PowerShell"
    $gutterTemplate = "Sitecore Client/Content editor/Gutter Renderer"
    $roots = Get-SpeModuleFeatureRoot "ContentEditorGutters"
    
    Write-Host "- Creating missing gutter script references." -ForegroundColor Cyan
    
    foreach($root in $roots){
        $scriptLibPath = "$($root.Database):$($root.Paths.Path)"
    
        # Add new scripts to Control Panel
        Get-Childitem $scriptLibPath | ForEach-Object {
            $script = $_
            Write-Host " - Processing Script '$($script.Name)'"
            $gutterEntryPath = "$gutterPath$($script.Name)"
            $gutterEntry = Get-Item $gutterEntryPath -ErrorAction SilentlyContinue
            if($gutterEntry -eq $null){
                Write-Host "  - Adding new script '$($script.Name)' to gutter." -ForegroundColor Green
                $gutterEntry = New-Item $gutterEntryPath -ItemType $gutterTemplate
            } else {
                if($gutterEntry.Type -eq $gutterHandlerClass){
                    Write-Host "  - Refreshing script '$($section.Name)/$($script.Name)' in Control panel."  -ForegroundColor Yellow
                } else {
                    Write-Host "  - Name conflict with existing gutter integration on script '($script.Name)' -skipping." -ForegroundColor Red
                    continue;
                }
            }
            $gutterEntry.__Icon = $script.__Icon; 
            $gutterEntry.Header = $script.Name;
            $gutterEntry.Type = $gutterHandlerClass
            $gutterEntry.Parameters = "scriptId=$($script.ID)&scriptDB=$($script.Database.Name)"
        }
    }
    
    Write-Host "- Cleaning up non existing scripts." -ForegroundColor Cyan
    
    #Remove non existing scripts from Gutter
    Get-Childitem $gutterPath | ForEach-Object {
        $gutterEntry = $_
        if($gutterEntry.Type -eq $gutterHandlerClass){
            $parameters = New-Object -TypeName "Sitecore.Text.UrlString" -ArgumentList "$($gutterEntry.Parameters)"
            $scriptId = $parameters.Parameters["ScriptId"];
            $scriptDb = $parameters.Parameters["ScriptDb"];
            if ($scriptDb -eq $null){
                $scriptDb = "master"
            }
            $script = Get-Item -path "$($scriptDb):/" -ID $scriptId -ErrorAction SilentlyContinue
            if($script -eq $null){
                Write-Host " - Removing '$($gutterEntry.Name)' from gutter as the script no longer exists or module not active."
                $gutterEntry | remove-item
            }else {
                if(!(Get-SpeModule -Item $script).Enabled){
                    Write-Host " - Removing '$($gutterEntry.Name)' from Content Editor gutter as the module is no longer active." -ForegroundColor Magenta
                    $gutterEntry | remove-item
                } else {
                    #Write-Host "Keeping script '$($gutterEntry.Name)'" -ForegroundColor Yellow
                }
            }
        }
    }
    Close-Window
Languages:
- Language: en
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20141127T175514
