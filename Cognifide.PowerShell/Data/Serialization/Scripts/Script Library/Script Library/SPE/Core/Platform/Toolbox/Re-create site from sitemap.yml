---
ID: "eb994c17-44b1-4620-9dcf-df046812f016"
Parent: "344414ea-dbd4-488a-bdbc-bd9685c66e39"
Template: "dd22f1b3-bd87-4db2-9e7d-f7a496888d43"
Path: "/sitecore/system/Modules/PowerShell/Script Library/SPE/Core/Platform/Toolbox/Re-create site from sitemap"
DB: master
SharedFields:
- ID: "06d5295c-ed2f-4a54-9bf2-26228d113318"
  Hint: __Icon
  Value: Office/32x32/web.png
- ID: "1c76313e-3c8c-4807-a826-135d10c39299"
  Hint: ShowRule
  Type: Rules
  Value: <ruleset />
- ID: "b1a94ff0-6897-47c0-9c51-aa6acb80b1f0"
  Hint: Script
  Value: |
    $createAt = Get-Item -Path "master:/content/Home/"
    $itemTemplate = Get-Item -Path "master:/templates/Sample/Sample Item"
    
    $result = Read-Variable -Parameters `
        @{ Name = "sitemapUrl"; Value=""; Placeholder = "https://www.sitecore.net/sitemap"; Title="Source Sitemap"; Root="/sitecore/content/"},
        @{ Name = "createAt"; Title="Item to create the site under"; Root="/sitecore/content/"},
        @{ Name = "itemTemplate"; Title="Template to use for pages"; Root="/sitecore/templates/"},
        @{ Name = "prefix"; Value=""; Placeholder = "https://www.sitecore.net/"; Title="Prefix to chop off URLs"; },
        @{ Name = "postfix"; Value=".aspx$"; Title="Postfix regex to chop off URLs";} `
        -Description "Create pages using the sitemap of an existing site." `
        -Title "Create Site From Sitemap" -Width 600 -Height 400 `
        -OkButtonName "Proceed" -CancelButtonName "Abort" -Icon ([regex]::Replace($PSScript.Appearance.Icon, "Office", "OfficeWhite", [System.Text.RegularExpressions.RegexOptions]::IgnoreCase))
    
    if($result -ne "ok") {
        Close-Window
        Exit
    }
    
    Set-Location -Path $createAt.ProviderPath
    
    $createAt = $createAt.Paths.Path
    $itemTemplate = $itemTemplate.Paths.Path
    
    #                    
    # Script starts here 
    # ------------------                   
     
    #function to create valid item name
    function CreateValidItemName([string]$itemName) {
      if (![Sitecore.Data.Items.ItemUtil]::IsItemNameValid($itemName)) {
        for ($i = 1; $i -lt $itemName.Length + 1; $i++) {
          if (![Sitecore.Data.Items.ItemUtil]::IsItemNameValid($itemName.Substring(0, $i))) {
            $itemName = $itemName.Substring(0, $i - 1) + $itemName.Substring($i)
            $i--;
          }
        }
      }
      return $itemName.ToString()
    }
     
    # function to create items (creates parent recursively if needed)
    function CreateItem ([string]$itemName) {
      $fullPath = "$createAt\$itemName"
      $parentPath = Split-Path $itemName -parent
      $itemName = Split-Path $itemName -leaf
      
      $itemValidName = CreateValidItemName($itemName)
      
      if(-not (Test-Path "$createAt\$parentPath")){
        if($parentPath.Length -gt 2){
          $parentItem = CreateItem $parentPath
        }
      } else {
          $parentItem = Get-item "$createAt\$parentPath"
      }
      
      $parentPath = $parentItem.Paths.FullPath
      
      if(-not (Test-Path "$fullPath")){
        write-host "Creating $fullPath"
        $item = New-Item -ItemType $itemTemplate -Name $itemValidName -Path $parentPath
        $item."__Display name" = $itemName -split '[\\/]' | `
          Select -last 1 | `
          ForEach-Object { $_ -replace "-", " " }
      }
      
      $item
    }
     
    # Get the sitemap
    [xml]$w = (new-object net.webclient).DownloadString($sitemapUrl);
     
    # Get the urls frm the xml
    $locations = $w.urlset.url | `
                 Where-Object {$_.loc -match $prefix} | `
                 Select-Object `
                   loc, `
                   @{Name="Path"; `
                     Expression = {$_.loc -replace $prefix,"" -replace $postfix,""}}
     
    # send url's for creation
    $i = 0;
    $locations | % { 
        $i++;
      $name = $_.Path.Trim('/')
      if(-not (Test-Path "$createAt/$name")){
        Write-Progress -PercentComplete (($i/$locations.length) * 100) -Activity "Creating Page" -CurrentOperation "$name"
        CreateItem $name
      }
    }
    Show-Result -Text
    Close-Window
- ID: "ba3f86a2-4a1c-4d78-b63d-91c2779c1b5e"
  Hint: __Sortorder
  Value: 100
- ID: "f62c67b4-28b6-4a6f-91cb-db78cf054f4e"
  Hint: EnableRule
  Type: Rules
  Value: <ruleset />
Languages:
- Language: en
  Fields:
  - ID: "9541e67d-ce8c-4225-803d-33f7f29f09ef"
    Hint: __Short description
    Value: Create content items based on a sitemap structure.
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20130916T154900Z
