---
ID: "9d84ff3e-fcc5-4600-b89d-d2dac031db57"
Parent: "e22d066a-04d0-4799-9dad-edd9eb07c2b2"
Template: "dd22f1b3-bd87-4db2-9e7d-f7a496888d43"
Path: "/sitecore/system/Modules/PowerShell/Script Library/SPE/Core/Platform/Functions/Export-Xlsx"
DB: master
SharedFields:
- ID: "b1a94ff0-6897-47c0-9c51-aa6acb80b1f0"
  Hint: Script
  Value: |
    Import-Function -Name BaseXlsx
    
    function Export-Xlsx {
    	[CmdletBinding(SupportsShouldProcess = $true,ConfirmImpact = 'Medium')]
    	param(
    		[Parameter(Mandatory = $true,ValueFromPipeline = $true,ValueFromPipelineByPropertyName = $true)]
    		[System.Management.Automation.PSObject]$InputObject,
    		[Parameter(Mandatory = $true,Position = 0)]
    		[Alias('PSPath','FilePath')]
    		[System.String]$Path,
    		[switch]$NoClobber,
    		[switch]$Force,
    		[switch]$NoHeader,
    		[switch]$Append,
    		[string]$WorkSheetName
    	)
    	
    	begin {
    	    if($NoClobber.IsPresent -and !$Append.IsPresent -and (Test-Path -Path $Path)) {
    	        throw [System.IO.IOException] "$($Path) cannot be created because the NoClobber parameter was specified and the file already exists."
    	    }
    	    if($Append.IsPresent) {
    	        Write-Warning "The option to Append to an existing workbook is not supported."
    	    }
    	    
            $workbook = New-XlsxWorkbook
    
    	    $worksheet = Add-XlsxWorksheet -Name $worksheetName -Workbook $workbook
    		
    	    $headerWritten = $False
    	    
    	    $exPkg = [System.IO.Packaging.Package]::Open($workbook, [System.IO.FileMode]::Open)
    			
    		$worksheetPart = $exPkg.GetPart($worksheet.Uri)
    			
    		# open worksheet xml
    		$worksheetXmlDoc = New-Object System.Xml.XmlDocument
    		# load XML document from package part stream
    		$worksheetXmlDoc.Load($worksheetPart.GetStream([System.IO.FileMode]::Open,[System.IO.FileAccess]::Read))
    	    
    	    $Path = [System.IO.Path]::GetFullPath($Path)
    	    $Path = [System.IO.Path]::ChangeExtension($Path,'xlsx')
    	    
    	    $headerWritten = $false
    	    
    	    $items = [System.Collections.ArrayList]@()
        }
    
        process {
            if((-not $NoHeader.IsPresent) -and (-not $headerWritten)) {
                Write-WorksheetHeader -InputObject $InputObject -WorksheetXmlDoc $workSheetXmlDoc
                $headerWritten = $true
            }
            $items.Add($InputObject) > $null
        }
    
        end {
            $items | Export-Worksheet -WorkSheetXmlDoc $workSheetXmlDoc
            $workSheetXmlDoc = [xml]$workSheetXmlDoc.OuterXml.Replace(" xmlns=`"`"", "")
            $workSheetXmlDoc.PreserveWhitespace = $true
            $workSheetXmlDoc.Save($workSheetPart.GetStream([System.IO.FileMode]::Open,[System.IO.FileAccess]::Write))
    		$exPkg.Close()
    		
            [byte[]]$outobject = $workbook.ToArray()
            [System.IO.File]::WriteAllBytes($Path, $outobject)
        }
    }
Languages:
- Language: en
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20140612T014311
