---
ID: "504fdcc3-df2d-4bd7-b456-9f9a33cd9fd0"
Parent: "01bb164c-5e8e-4c9b-941f-e5340bdd520c"
Template: "dd22f1b3-bd87-4db2-9e7d-f7a496888d43"
Path: /sitecore/system/Modules/PowerShell/Script Library/SPE/Core/Platform/Development/PowerShell Extensions Maintenance/Generate Language XMLs
DB: master
SharedFields:
- ID: "b1a94ff0-6897-47c0-9c51-aa6acb80b1f0"
  Hint: Script
  Value: |
    $srcLanguage = "en"
    $targetLanguage = "ja-JP"
    [xml]$xmlCore = New-Object System.Xml.XmlDocument
    $sitecoreCore = $xmlCore.CreateElement("sitecore")
    $xmlCore.AppendChild($sitecoreCore) | Out-null
    
    [xml]$xmlMaster = New-Object System.Xml.XmlDocument
    $sitecoreMaster = $xmlMaster.CreateElement("sitecore")
    $xmlMaster.AppendChild($sitecoreMaster) | Out-null
    
    
    function Append-Attribute{
    	[CmdletBinding()]
    	param(
    		[Parameter(Position=0)]
    		[System.Xml.XmlElement]$element,
    
    		[Parameter(Position=1)]
    		[string]$Name,
    
    		[Parameter(Position=2)]
    		[string]$Value
        )
        $Attribute = $xml.CreateAttribute($Name)
        $Attribute.Value = $Value
        $element.Attributes.Append($Attribute) | Out-null
        
    }
    
    function Process-Field {
    	[CmdletBinding()]
    	param(
    		[ValidateNotNullOrEmpty()]
    		[Parameter()]
    		[item]$SourceItem,
    		
    		[Parameter()]
    		[item]$TargetItem,
    
    		[Parameter()]
    		[string]$FieldName,
    
    		[Parameter()]
    		[xml]$xml,
    
    		[Parameter()]
    		[System.Xml.XmlElement]$sitecore
    	)
    
        $phrase = $xml.CreateElement("phrase")
        $sitecore.AppendChild($phrase) | Out-null
    
        Append-Attribute $phrase "updated" $SourceItem.Fields["__Updated"]
        Append-Attribute $phrase "fieldid" $fieldName
        #Append-Attribute $phrase "fieldguid" $item.Fields[$fieldName].ID
        Append-Attribute $phrase "itemid" $item.ID
        Append-Attribute $phrase "key" $SourceItem.Name
        Append-Attribute $phrase "path" $SourceItem.Paths.FullPath
     
        $langValue = $xml.CreateElement($targetLanguage)
        $phrase.AppendChild($langValue) | Out-null
        if(!$TargetItem)
        {
            $langValue.InnerText = "** $($SourceItem.$fieldName) **"
        }
        else
        {
            $langValue.InnerText = $TargetItem.$fieldName
        }
    }
    
    function Process-Item {
    	[CmdletBinding()]
    	param(
    		[Parameter(Mandatory = $true,ValueFromPipeline = $true)]
    		[ValidateNotNullOrEmpty()]
    		[item]$Item,
    
    		[Parameter()]
    		[string]$Activity = "undefined",
    
    		[Parameter()]
    		[int]$PercentComplete = 50,
    
    		[Parameter()]
    		[switch]$Recurse = $false
    	)
    
        $sourceItem = Get-Item $Item.ProviderPath -Language $srcLanguage
        $targetItem = Get-Item $Item.ProviderPath -Language $targetLanguage
        if($item.Database.Name -eq "master"){
            $xml = $xmlMaster
            $sitecore = $sitecoreMaster
        } 
        else
        {
            $xml = $xmlCore
            $sitecore = $sitecoreCore
    
        }
        
        if($Recurse){
            $children = Get-ChildItem $Item.ProviderPath
            foreach($child in $children){
                Process-Item -Item $child -Activity $Activity -PercentComplete $PercentComplete -Recurse 
            }
        }
        
        foreach ($field in $sourceItem.Fields)
        {
            if ($field.ShouldBeTranslated -and -not [string]::IsNullOrEmpty($field.Value))
            {
    	        Process-Field -SourceItem $sourceItem -TargetItem $targetItem -FieldName $field.Name -xml $xml -sitecore $sitecore
            }
        }
    }
    
    
    #Item templates
    Get-Item 'master:\templates\Modules' | Process-Item -Activity "Item templates " -PercentComplete 5
    Get-Item 'master:\templates\Modules\PowerShell Console' | Process-Item -Activity "Item templates" -PercentComplete 15 -Recurse
    
    # Module Root
    Get-Item 'master:\system\Modules\PowerShell' | Process-Item -Activity "Module Root" -PercentComplete 35
    
    # Colors
    Get-Item 'master:\system\Modules\PowerShell\Console Colors' | Process-Item -Activity "Console Colors" -PercentComplete 40 -Recurse
    
    # Fonts
    Get-Item 'master:\system\Modules\PowerShell\Fonts' | Process-Item -Recurse -Activity "Console Fonts" -PercentComplete 43
    
    # Rules Engine Rules
    Get-Item "master:\system\Settings\Rules\Definitions\Tags\PowerShell" | Process-Item -Recurse -Activity "Rules Engine Rules" -PercentComplete 45
    Get-Item "master:\system\Settings\Rules\Definitions\Tags\PowerShell Experience Buttons" | Process-Item -Recurse -Activity "Rules Engine Rules" -PercentComplete 46
    Get-Item "master:\system\Settings\Rules\Definitions\Tags\PowerShell ISE" | Process-Item -Recurse -Activity "Rules Engine Rules" -PercentComplete 47
    Get-Item "master:\system\Settings\Rules\Definitions\Elements\PowerShell" | Process-Item -Recurse -Activity "Rules Engine Rules" -PercentComplete 48
    Get-Item "master:\system\Settings\Rules\Definitions\Elements\PowerShell Experience Buttons" | Process-Item -Recurse -Activity "Rules Engine Rules" -PercentComplete 49
    Get-Item "master:\system\Settings\Rules\Definitions\Elements\PowerShell ISE" | Process-Item -Recurse -Activity "Rules Engine Rules" -PercentComplete 50
    Get-Item "master:\system\Settings\Rules\PowerShell" | Process-Item -Recurse -Activity "Rules Engine Rules" -PercentComplete 51
    
    # Script Library
    #Get-Item 'master:\system\Modules\PowerShell\Script Library' | Process-Item -Activity "Script Library" -PercentComplete 55
    #$libraries = Get-ChildItem 'master:\system\Modules\PowerShell\Script Library'
    #$i = 0;
    #$libraries | % { $i++; Process-Item -Item $_ -Recurse -Activity "Script Library: $($_.Name)" -PercentComplete (55 + 25 / $libraries.Count * $i) }
    
    # Settings
    Get-Item master:\system\Modules\PowerShell\Settings | Process-Item -Activity "Settings" -PercentComplete 80
    Get-ChildItem master:\system\Modules\PowerShell\Settings | Process-Item
    Get-Item "master:\system\Modules\PowerShell\Settings\*\All Users" | Process-Item
    
    # PowerShell Applications
    Get-Item core:\content\Applications\PowerShell | Process-Item -Recurse -Activity "PowerShell Applications" -PercentComplete 82
    
    # PowerShell Dictionary - translation strings
    Get-Item core:\system\Dictionary\PowerShell | Process-Item -Recurse -Activity "PowerShell Applications" -PercentComplete 85
    
    
    # PowerShell Application Layouts
    Get-Item 'core:\layout\Layouts\Applications\PowerShell*' | Process-Item -Recurse -Activity "PowerShell Application Layouts" -PercentComplete 87
    Get-Item 'master:\layout\Layouts\PowerShell' | Process-Item -Recurse
    
    # Start Menu icons
    Get-Item 'core:\content\Documents and settings\All users\Start menu\Right\Development Tools\PowerShell ISE' | Process-Item -Activity "Start Menu icons" -PercentComplete 90
    Get-Item 'core:\content\Documents and settings\All users\Start menu\Right\PowerShell Console' | Process-Item
    Get-Item 'core:\content\Documents and settings\All users\Start menu\Right\PowerShell Toolbox' | Process-Item
    Get-Item 'core:\content\Documents and settings\All users\Start menu\Right\Reporting Tools\PowerShell Reports' | Process-Item
    Get-ChildItem 'core:\content\Documents and settings\All users\Start menu\Right\Reporting Tools\PowerShell Reports' | Process-Item
    
    # Content Editor Context Menu integration
    Get-Item 'core:\content\Applications\Content Editor\Context Menues\Default\Edit Script' | Process-Item -Activity "Content Editor Context Menu integration" -PercentComplete 92
    Get-Item 'core:\content\Applications\Content Editor\Context Menues\Default\PowerShell Console' | Process-Item
    Get-Item 'core:\content\Applications\Content Editor\Context Menues\Default\Context PowerShell Scripts' | Process-Item
    
    # LaunchPad
    Get-Item 'core:\client\Applications\Launchpad\PageSettings\Buttons\ContentEditing\PowerShell ISE' | Process-Item -Activity "Launchpad Integration" -PercentComplete 95
    
    # Tasks integration
    Get-Item 'master:\system\Tasks\Commands\PowerShellScriptCommand' | Process-Item -Activity "Content Tasks integration" -PercentComplete 100
    
    $xmlMaster.Save("$SitecoreDataFolder\Translations\spe-translation-master-$targetLanguage.xml")
    $xmlCore.Save("$SitecoreDataFolder\Translations\spe-translation-core-$targetLanguage.xml")
Languages:
- Language: en
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20160823T191415
