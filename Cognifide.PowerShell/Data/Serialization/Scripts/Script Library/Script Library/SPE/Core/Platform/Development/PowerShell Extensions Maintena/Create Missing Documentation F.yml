---
ID: "fbbf119e-1930-4dd2-bf97-0e331355d2fd"
Parent: "01bb164c-5e8e-4c9b-941f-e5340bdd520c"
Template: "dd22f1b3-bd87-4db2-9e7d-f7a496888d43"
Path: /sitecore/system/Modules/PowerShell/Script Library/SPE/Core/Platform/Development/PowerShell Extensions Maintenance/Create Missing Documentation Files
DB: master
SharedFields:
- ID: "b1a94ff0-6897-47c0-9c51-aa6acb80b1f0"
  Hint: Script
  Value: |
    $DocumentationFolder = "C:\Projects\sitecorepowershell\Trunk\Documentation"
    
    $documented = Get-ChildItem $DocumentationFolder | % { $_.BaseName } 
    $undocumented = Get-Command -CommandType Cmdlet | ? { $_.DLL -match "Cognifide"}  | ? { "$($_.Verb)-$($_.Noun)" -Notin $documented } | %{ "$($_.Verb)-$($_.Noun)" }
    
    $commonParameters = 
        @{ Path = "Path to the item to be processed - can work with Language parameter to narrow the publication scope.";
           Id="Id of the item to be processed - can work with Language parameter to specify the language other than current session language. Requires the Database parameter to be specified.";
           Database="Database containing the item to be fetched with Id parameter.";
           Language="If you need the item in specific Language You can specify it with this parameter. Globbing/wildcard supported.";
           Recurse="Process the item and all of its children.";
           Item="The item to be processed.";
           Identity="User name including domain. If no domain is specified - 'sitecore' will be used as the default value";
           Debug = "#skip#";
           ErrorAction = "#skip#";
           ErrorVariable = "#skip#";
           OutVariable = "#skip#";
           OutBuffer = "#skip#";
           PipelineVariable = "#skip#";
           Verbose = "#skip#";
           WarningAction = "#skip#";
           WarningVariable = "#skip#";
           Confirm = "Prompts you for confirmation before running the cmdlet.";
           WhatIf = "Shows what would happen if the cmdlet runs. The cmdlet is not run.";
           PassThru = "Passes the processed object back into the pipeline."
           };
           
    
    $undocumented | % { 
        $command = (get-command $_)
        $parameters = $command.Parameters.Values
        $outputs = $command.OutputType | %{ $_.Name } 
    
        $content = @"
    <#
        .SYNOPSIS
            $_.
    
        .DESCRIPTION
            $_.`n
    "@
    
    foreach($parameter in $parameters){
        if($commonParameters.ContainsKey($parameter.Name)){
            $description = $commonParameters[$parameter.Name];
        }
        else{
            $description = "TODO: Provide description for this parameter";
        }
        if($description -eq "#skip#"){
            continue;
        }
        $content = $content + @" 
    
    
        .PARAMETER $($parameter.Name)
            $description
    "@
    }
    
        $content = $content + @"
        
        
        .INPUTS
            Sitecore.Data.Items.Item
        
        .OUTPUTS
            $($outputs -Join "`n        " )
    
        .NOTES
            Help Author: Adam Najmanowicz, Michael West
    
        .LINK
            https://github.com/SitecorePowerShell/Console/
    
        .EXAMPLE
            PS master:\> $_ -Path master:\content\home
    #>
    "@
    
        $fileName = "$DocumentationFolder\$_.TODO.ps1" 
        if(Test-Path $fileName){
            remove-item $filename
        } 
        New-Item $fileName -Type File | 
        Set-Content -Value $content
    
    
    }
Languages:
- Language: en
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20140714T133409
