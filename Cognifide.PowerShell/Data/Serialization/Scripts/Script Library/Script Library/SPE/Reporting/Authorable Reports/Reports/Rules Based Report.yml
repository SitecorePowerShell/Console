---
ID: "f0a00908-b86c-4a32-a824-96d78a1c76aa"
Parent: "8cdf08aa-a2c0-4eb0-8ae5-979b61b4823e"
Template: "dd22f1b3-bd87-4db2-9e7d-f7a496888d43"
Path: /sitecore/system/Modules/PowerShell/Script Library/SPE/Reporting/Authorable Reports/Reports/Rules Based Report
DB: master
SharedFields:
- ID: "06d5295c-ed2f-4a54-9bf2-26228d113318"
  Hint: __Icon
  Value: Office/32x32/data_scroll.png
- ID: "b1a94ff0-6897-47c0-9c51-aa6acb80b1f0"
  Hint: Script
  Value: |
    Import-Function -Name Render-ReportField
    Import-Function -Name Get-ReportRule
    Import-Function -Name Get-ReportQuery
    # Set defaults
    
    $ignoredFields = "__Standard values", "__Tracking", "__Source", "__Help link", "__Renderings", "__Final Renderings", "__Renderers", "__Controller", 
        "__Controller Action", "__Insert Rules", "__Preview", "__Originator", "__Quick Action Bar Validation Rules", "__Validate Button Validation Rules",
        "__Validator Bar Validation Rules", "__Skin", "__Icon", "__Enabled Views", "__Default View", "__Context Menu", "__Revision", "__Quick Actions",
        "__Display Name"
        
    $standardFields = [Sitecore.Data.Managers.TemplateManager]::GetTemplate([Sitecore.Configuration.Settings]::DefaultBaseTemplate, (Get-Database -Name "master")).GetFields() | ForEach-Object { $_.Name }
    
    $dialogTitle = "Rules Based Report"
    $reportRoots = [Cognifide.PowerShell.Core.Modules.ModuleManager]::GetFeatureRoots([Cognifide.PowerShell.Core.Modules.IntegrationPoints]::StartMenuReportsFeature)
    $ruleItems = @()
    $powershellRuleLibaryTemplateId = "{BC29CC43-FC82-4A6C-B325-FB261DA5931B}"
    foreach($reportRoot in $reportRoots) {
        $ruleItems += Get-ChildItem -Path "$($reportRoot.Database):$($reportRoot.Paths.Path)" -Recurse | 
            Where-Object { $_.TemplateId -eq $powershellRuleLibaryTemplateId }
    }
    
    $ruleItems = $ruleItems | Sort-Object -Property Name
    $ruleOptions = [ordered]@{}
    for($i = 0; $i -lt $ruleItems.Count; $i++) {
        $ruleItem = $ruleItems[$i]
        $ruleOptions[$ruleItem.Name] = $i
    }
    $ruleIndex = 0
    
    $reportDialogProps = @{
        Parameters = @(
            @{Name="ruleIndex"; Title="Rule Report"; Options=$ruleOptions; Tooltip="Select the preconfigured report rule."},
            @{Name="showFieldSelector"; Title="Show field selector"; Value=$false; }
        )
        Title = $dialogTitle
        Description = "Authorable reports driven by queries and rules."
        ShowHints = $true
        Icon = ([regex]::Replace($PSScript.Appearance.Icon, "Office", "OfficeWhite", [System.Text.RegularExpressions.RegexOptions]::IgnoreCase))
    }
    
    $result = Read-Variable @reportDialogProps
    if($result -eq "cancel"){
        Close-Window
        exit
    }
    
    $rootItemId = @{$true=$ruleItems[$ruleIndex].RootItem; $false=[Sitecore.ItemIDs]::ContentRoot}[(Test-Path -Path "master:\$($ruleItems[$ruleIndex].RootItem)")]
    $root = $null
    if($rootItemId) {
        $root = Get-Item -Path "master:" -ID $rootItemId
    }
    $reportName = Get-Item -Path "master:" -ID $ruleItems[$ruleIndex].ID | Select-Object -Expand Name
    $rule = Get-ReportRule -ID ($ruleItems[$ruleIndex].ID)
    $scopeQuery = Get-ReportQuery -ID ($ruleItems[$ruleIndex].ID)
    
    # Lookup all fields for the content used.
    $useScopeQuery = $false
    if($scopeQuery) {
        $indexedItems = Find-Item -Index sitecore_master_index -ScopeQuery $scopeQuery | 
            Initialize-Item | Where-Object { Test-Rule -InputObject $_ -Rule $rule -RuleDatabase master }
        $useScopeQuery = $true
    } else {
        $indexedItems = Find-Item -Criteria @{
            Filter = "DescendantOf"; Value = $root
        } -Index sitecore_master_index | Initialize-Item | Where-Object { Test-Rule -InputObject $_ -Rule $rule -RuleDatabase master }
    }
    
    $templateLookup = @{}
    $indexedItems |
        Select-Object -ExpandProperty TemplateId -Unique |  
        ForEach-Object { 
            if(!$templateLookup[$_]) {
                $templateLookup[$_] = New-Object Sitecore.Data.Items.TemplateItem (Get-Item -Path "master:" -ID "$_")
            }
        }
    
    $templateFields = $templateLookup.Values | ForEach-Object { $_.Fields } | 
        Where-Object { $ignoredFields -notcontains $_.Name } | 
        Select-Object Name, Title, Type -Unique | Sort-Object Name
    
    if($templateFields.Count -eq 0){
        Show-Alert "No Items matching your rule!"
        Close-Window
        exit
    } 
    
    $stdOptions = [ordered]@{
        "Name" = "Name"
        "Display Name" = "DisplayName"
        "PowerShell Path" = "ProviderPath"
        "Template" = "TemplateName"
        "ItemPath" = "ItemPath"
    }
    
    $customOptions = [ordered]@{}
    
    foreach($field in $templateFields){
        $title = @{$true=$field.Name; $false=$field.Title}[[string]::IsNullOrEmpty($field.Title)]
        $title = "$title [$($field.Type)]"
        if($standardFields -contains $field.Name){
            $stdOptions[$title] = $field.Name
        } else {
            $customOptions[$title] = $field.Name
        }
    }
    
    $titles = [ordered]@{}
    
    foreach($field in $stdOptions.Keys){
        $titles[$stdOptions[$field]] = $stdOptions[$field]
    }
    foreach($field in $customOptions.Keys){
        $titles[$customOptions[$field]] = $customOptions[$field]
    }
    
    $defaultFields = $ruleItems[$ruleIndex].DefaultFields.Split("|")
    $customFields = $defaultFields
    $saveSettings = $false
    if($showFieldSelector) {
        $fieldDialogProps = @{
            Title = $dialogTitle
            Description  = "Choose the fields to include in the report."
            Width = 600 
            Height = 740
            Icon = ([regex]::Replace($PSScript.Appearance.Icon, "Office", "OfficeWhite", [System.Text.RegularExpressions.RegexOptions]::IgnoreCase))
            ShowHints = $true
            Parameters = @(
                @{ Name="customFields"; Title="Fields to include"; Options=$customOptions; Tooltip="Select fields to be shown in the report"; Editor="checklist"; Height="480px"; Tab="Custom Fields"}, `
                @{ Name="defaultFields"; Title="Fields to include"; Options=$stdOptions; Tooltip="Select fields to be shown in the report"; Editor="checklist"; Height="480px"; Tab="Standard Fields"}, `
                @{ Name="saveSettings"; Title="Save the field selections to the rule."; Tab="Settings"}
            )
        }
        $result = Read-Variable @fieldDialogProps
        
        if($result -eq "cancel"){
            Close-Window
            exit
        }
    }
    
    $properties = @()
    $fields = $defaultFields + $customFields | Select-Object -Unique
    
    foreach($field in $fields){
        $expressionScript = [scriptblock]::Create('Render-ItemField $_ "' + $field + '"')
        $label = $titles[$field]
        if([string]::IsNullOrEmpty($label)) {
            $label = $field
        }
        $properties += @{Label=$label; Expression=$expressionScript}
    }
    
    $items = @()
    if($useScopeQuery) {
        $items = $indexedItems
    } else {
        $items = @($root) + ($root.Axes.GetDescendants() | Initialize-Item) | Where-Object { Test-Rule -InputObject $_ -Rule $rule -RuleDatabase master }
    }
    
    $items | Show-ListView -Property $properties -ViewName AuthorableReport -Title $dialogTitle -InfoTitle "Report Details" -InfoDescription "Output based on the $($reportName) report."
    
    if($saveSettings) {
        $ruleItem = Get-Item -Path "master:" -ID ($ruleItems[$ruleIndex].ID)
        $ruleItem.DefaultFields = $fields -join "|"
    }
    Close-Window
Languages:
- Language: en
  Fields:
  - ID: "577f1689-7de4-4ad2-a15f-7fdc1759285f"
    Hint: __Long description
    Value: Run custom reports built using queries and the rules engine.
  - ID: "9541e67d-ce8c-4225-803d-33f7f29f09ef"
    Hint: __Short description
    Value: Run custom reports built using queries and the rules engine.
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20180724T231622Z
    - ID: "5dd74568-4d4b-44c1-b513-0af5f4cda34f"
      Hint: __Created by
      Value: |
        sitecore\Admin
