---
ID: "4c9f49e2-4c71-480d-b393-f7d93165af1c"
Parent: "9f3eea96-cec8-4c7d-b26b-6d15ab654af1"
Template: "dd22f1b3-bd87-4db2-9e7d-f7a496888d43"
Path: /sitecore/system/Modules/PowerShell/Script Library/SPE/Core/Platform/Create Language Dictionary entries
DB: master
SharedFields:
- ID: "b1a94ff0-6897-47c0-9c51-aa6acb80b1f0"
  Hint: Script
  Value: |
    $translationTest = $false
    
    # Get current PowerShell dictionary items
    $ScDictionaryPath = "core:\system\Dictionary\PowerShell"
    $allEntries = @{}
    Get-ChildItem $ScDictionaryPath -Recurse | ? { $_.TemplateName -eq "Dictionary entry" } | %{ $allEntries[$_.ProviderPath] = $_ }
    
    # Get Sitecore default dictionary items by key, for confirming if dictionary entries exist already
    $allSitecoreEntries = @{}
    Get-ChildItem "core:\system\Dictionary" -Recurse | ? { $_.TemplateName -eq "Dictionary entry" -and -not $_.ProviderPath.StartsWith($ScDictionaryPath) } | %{ $allSitecoreEntries[$_._Key] = $_ }
    
    # Add static strings
    $texts = @()
    $texts += [Spe.Texts] | Get-Member -static -MemberType Properties | % { [Spe.Texts]::($_.Name) }
    
    # Add XML Page Literals
    $ignoredLiteralText = @(
        "<span class='status'></span><br/>",
        "<div id='progressbar'></div>"
    )
    
    $nodeTypes = @(
        @{ Type="Literal"; Property="Text" },
        @{ Type="MenuHeader"; Property="Header" }
    )
    
    $xmlFiles = Get-ChildItem -Path "$AppPath\sitecore modules\Shell\PowerShell\" -filter "*.xml" -File -Recurse
    
    foreach ( $file in $xmlFiles )
    {
        foreach ( $type in $nodeTypes ) 
        {
            $xml = [xml](Get-Content $file.FullName)
            $ns = New-Object Xml.XmlNamespaceManager $xml.NameTable
            $ns.AddNamespace("ns", "http://schemas.sitecore.net/Visual-Studio-Intellisense")
    
            foreach ( $node in $xml.SelectNodes("//ns:" + $type.Type, $ns) )
            {        
                $value = $node.$($type.Property)
                
                # Only take text that don't appear to be a variable name or are being explicitly ignored
                if ($value -and 
                    $value -notmatch "^\$[a-zA-Z]+$" -and
                    $ignoredLiteralText -notcontains $value) {
                        $texts += $value
                }
            }
        }
    }
    
    foreach($text in $texts){
        $itemName = $text.
                        Replace(".","").Replace("[","").Replace("]","").
                        Replace("(","").Replace(")","").Replace(":","").
                        Replace("'","").Replace('"',"").Replace(',',"").
                        Replace('{',"").Replace('}',"").Replace('?',"").
                        Replace('*',"").Replace('<',"").Replace('>',"").
                        Replace('\\',"").Replace('/',"").
                        Trim()
        $itemName = $itemName.Substring(0,[Math]::Min(98,$itemName.Length));
        $letter = $itemName.ToUpper()[0]
        $pathPart = "$letter\$itemName"
        $letterPath = "$ScDictionaryPath\$letter"
        $path = "$ScDictionaryPath\$pathpart"
        $phrase = $text
        
        if($translationTest){
            $phrase = "$text (translated)"
        }
        
        if ($allSitecoreEntries.ContainsKey($text)) {
            Write-Host "Sitecore contains own dictionary entry:" -ForegroundColor Magenta -NoNewline
        }
        elseif(Test-Path $path ){
            $dictionaryEntry = Get-Item $path -Language "en"
            if($dictionaryEntry.TemplateName -eq "Dictionary folder"){
                Write-Host "Item found but has wrong template (deleting) " -ForegroundColor Blue -NoNewline
                $dictionaryEntry.Delete();
            }
            else 
            {
                if($dictionaryEntry["Key"] -ne $text)
                {
                    Write-Host "Item found but Key differs (updating)" -ForegroundColor Blue -NoNewline
                    $dictionaryEntry.Editing.BeginEdit()
                    $dictionaryEntry["Key"] = $text
                    $dictionaryEntry["Phrase"] = $phrase
                    $dictionaryEntry.Editing.EndEdit() | Out-Null
                }
                else 
                {
                    if($dictionaryEntry["Phrase"] -ne $phrase)
                    {
                        Write-Host "Item found but Phrase differs (updating)" -ForegroundColor Blue -NoNewline
                        $dictionaryEntry.Editing.BeginEdit()
                        $dictionaryEntry["Key"] = $text
                        $dictionaryEntry["Phrase"] = $phrase
                        $dictionaryEntry.Editing.EndEdit() | Out-Null
                    }
                    else
                    {
                        Write-Host "Item found and up to date: " -ForegroundColor Green -NoNewline
                    }
                }
            }
        }
        else
        {
            Write-Host "Item NOT found (adding)" -ForegroundColor Red -NoNewline
            if(-not (Test-Path $letterPath))
            {
                New-Item $ScDictionaryPath -Name $Letter -ItemType "System/Dictionary/Dictionary folder"  -Language "en" | Out-Null
            }
            $dictionaryEntry = New-Item $letterPath -Name $itemName -ItemType "System/Dictionary/Dictionary entry" -Language "en"
            $dictionaryEntry.Editing.BeginEdit()
            $dictionaryEntry["Key"] = $text
            $dictionaryEntry["Phrase"] = $phrase
            $dictionaryEntry.Editing.EndEdit() | Out-Null
        }
        Write-Host " $pathpart"
        $allEntries.Remove($dictionaryEntry.Providerpath);
    }
    
    Write-Host "`n`nFollowing items are not associated with constants and should be reviewed for removal (Be careful as some of them may used by scripts) " -ForegroundColor Yellow
    
    $allEntries.Values | ft Name, _Key, Phrase -AutoSize
Languages:
- Language: "de-DE"
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20190107T235520Z
    - ID: "5dd74568-4d4b-44c1-b513-0af5f4cda34f"
      Hint: __Created by
      Value: |
        sitecore\Admin
    - ID: "8cdc337e-a112-42fb-bbb4-4143751e123f"
      Hint: __Revision
      Value: "3800a9ae-b676-42b0-bf87-ec248eec4620"
- Language: en
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20160826T125427
    - ID: "8cdc337e-a112-42fb-bbb4-4143751e123f"
      Hint: __Revision
      Value: "9815fcf2-dc8a-4861-abc2-38f045b447d0"
